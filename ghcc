#!/usr/bin/env ruby
require "thor"
require "sequel"
require_relative "lib/commands/contributions/process_contributions"
require_relative "lib/commands/commits/refresh"
require_relative "lib/shared/database"
require_relative "lib/shared/logger"
require_relative 'lib/commands/pull_requests/refresh'
require_relative 'lib/commands/users/users'
require_relative 'lib/commands/repos/repo'
require_relative 'lib/commands/reviews/reviews'
require_relative 'lib/commands/contributions/contributions'
require_relative 'lib/commands/development/dev'
require_relative 'lib/commands/orgs/orgs'

class GHCC < Thor
  def self.exit_on_failure?
    true
  end
  # class_option :verbose, :type => :boolean

  desc "commits", "Adds commits to contributions"
  method_option :repo,
                :type => :string,
                default: "charltonaustin/ghcc",
                :desc => "Name of the repository you want to get commits for"
  def commits
    logger = get_logger
    repo = options[:repo]
    get_connection do |db|
      output = refresh_commits(db, repo, logger)
      puts "refreshed #{output.size} commits in #{repo}"
    end
  end
  desc "orgs", "Create new organizations"
  subcommand "orgs", Orgs

  desc "dev", "dev commands"
  subcommand "dev", Dev
  
  desc "contributions", "Get user contributions"
  subcommand "contributions", Contributions
  
  desc "users", "Manage github users"
  subcommand "users", Users
  
  desc "repos", "Manage github repositories"
  subcommand "repos", Repo
  
  desc "reviews", "Manage github reviews"
  subcommand "reviews", Reviews
  
  desc "pull_requests", "Refresh pull requests"
  def pull_requests
    client = get_client
    client.auto_paginate = false
    logger = get_logger
    get_connection do |db|
      refresh_pull_requests(db, client, logger)
    end
  end
end

GHCC.start(ARGV)
