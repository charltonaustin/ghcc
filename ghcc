#!/usr/bin/env ruby
require "thor"
require "sequel"
require_relative "#{__dir__}/lib/commands/process_contributions"
require_relative "#{__dir__}/lib/commands/get_commits"
require_relative "#{__dir__}/lib/shared/repository/database"
class GHCC < Thor
  # class_option :verbose, :type => :boolean

  desc "contributions", "Get contributions from user(s)"
  method_option :start_date,
                :type => :string, default: "#{Date.today - 14}",
                :desc => "First date to start counting contributions"
  method_option :end_date,
                :type => :string,
                default: "#{Date.today}",
                :desc => "Last date to count contributions"
  def contributions
    start_date = Date.parse(options[:start_date])
    end_date = Date.parse(options[:end_date])
    get_contributions(start_date, end_date)
  end

  desc "commits", "Adds commits to contributions"
  method_option :repo,
                :type => :string,
                default: "kin/report-service",
                :desc => "Name of the repository you want to get commits for"
  def commits
    repo = options[:repo]
    refresh_commits(repo)
  end
  
  desc "install", "Symlinks this file to /usr/local/bin"
  def install
    File.symlink(File.expand_path(__FILE__), "/usr/local/bin/#{File.basename(__FILE__)}")
  end

  desc "run_migrations", "Updates current data model"
  def run_migrations
    Sequel.extension :migration
    get_connection do |db| 
      Sequel::Migrator.run(db, "#{__dir__}/lib/migrations")
    end
  end
end

GHCC.start(ARGV)
